{"ast":null,"code":"import { METHOD } from './constants.js';\n\nclass Api {\n  constructor(config) {\n    this.url = config.url;\n    this.headers = config.headers;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error(`Произошла ошибка со статус кодом ${res.status}`));\n  }\n\n  _handleError(err) {\n    return Promise.reject(err);\n  }\n\n  getCards() {\n    return fetch(`${this.url}/cards`, {\n      headers: this.headers\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n  createCard({\n    name,\n    link\n  }) {\n    return fetch(`${this.url}/cards`, {\n      method: METHOD.POST,\n      headers: this.headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this.url}/cards/${id}`, {\n      method: METHOD.DELETE,\n      headers: this.headers\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: METHOD.PUT,\n      headers: this.headers\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: METHOD.DELETE,\n      headers: this.headers\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n  getMyInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: this.headers\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n  updateMyInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this.url}/users/me`, {\n      method: METHOD.PATCH,\n      headers: this.headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n  updateMyAvatar(avatar) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: METHOD.PATCH,\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._handleResponse).catch(this._handleError);\n  }\n\n}\n\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-21', {\n  authorization: '5272ec4f-012a-4dd0-babb-fcf2aac8eb04'\n});\nexport default api;","map":{"version":3,"sources":["/Users/aleksandrvasilev/dev/mesto-react/src/utils/Api.js"],"names":["METHOD","Api","constructor","config","url","headers","_handleResponse","res","ok","json","Promise","reject","Error","status","_handleError","err","getCards","fetch","then","catch","createCard","name","link","method","POST","body","JSON","stringify","deleteCard","id","DELETE","likeCard","cardId","PUT","dislikeCard","getMyInfo","updateMyInfo","about","PATCH","updateMyAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["import { METHOD } from './constants.js'\n\nclass Api {\n  constructor (config) {\n    this.url = config.url\n    this.headers = config.headers\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json()\n    }\n  return Promise.reject(new Error(`Произошла ошибка со статус кодом ${res.status}`))\n  }\n\n  _handleError(err) {\n    return Promise.reject(err)\n  }\n    \n  getCards() {\n    return fetch(`${this.url}/cards`, {\n      headers: this.headers,\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n  }\n\n  createCard({name, link}) {\n    return fetch(`${this.url}/cards`, {\n      method: METHOD.POST,\n      headers: this.headers,\n      body: JSON.stringify({ name, link })\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this.url}/cards/${id}`, {\n      method: METHOD.DELETE,\n      headers: this.headers,\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n    }\n\n  likeCard(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: METHOD.PUT,  \n      headers: this.headers,\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: METHOD.DELETE,  \n      headers: this.headers,\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n  }\n\n  getMyInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: this.headers,\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n  }\n\n  updateMyInfo({name, about}) {\n    return fetch(`${this.url}/users/me`, {\n      method: METHOD.PATCH, \n      headers: this.headers,\n      body: JSON.stringify({ name, about })\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n  }\n\n  updateMyAvatar(avatar) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: METHOD.PATCH, \n      headers: this.headers,\n      body: JSON.stringify({ avatar })\n    })\n    .then(this._handleResponse)\n    .catch(this._handleError)\n  }\n}\n\nconst api = new Api ('https://mesto.nomoreparties.co/v1/cohort-21', {authorization: '5272ec4f-012a-4dd0-babb-fcf2aac8eb04'}\n)\n\nexport default api"]},"metadata":{},"sourceType":"module"}